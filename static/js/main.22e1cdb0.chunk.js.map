{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.module.css","components/Section/Section.module.css","components/Notification/Notification.jsx","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Section.jsx","components/FeedbackLogic/FeedbackLogic.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Notification","message","className","s","negativeTitle","Statistics","good","neutral","bad","total","positiveFeedback","container","values","paragraph","FeedbackOptions","options","onLeaveFeedback","wrapper","map","option","type","name","button","onClick","e","item","target","toLowerCase","Section","title","children","Feedback","useState","setGood","setNeutral","setBad","prevState","Math","floor","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.22e1cdb0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Statistics_container__2TIgW\",\"title\":\"Statistics_title__2fpdE\",\"values\":\"Statistics_values__2g_eQ\",\"negativeTitle\":\"Statistics_negativeTitle__3x7Ei\",\"paragraph\":\"Statistics_paragraph__343ZG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__2XFVo\",\"wrapper\":\"FeedbackOptions_wrapper__309k0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"negativeTitle\":\"Notification_negativeTitle__2thjj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__sA_3Q\"};","import s from \"components/Notification/Notification.module.css\";\nimport PropTypes from \"prop-types\";\n\nfunction Notification({ message }) {\n  return <h2 className={s.negativeTitle}>{message}</h2>;\n}\n\nexport default Notification;\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import s from \"components/Statistics/Statistics.module.css\";\nimport Notification from \"components/Notification/Notification\";\nimport PropTypes from \"prop-types\";\n\nfunction Statistics({ good, neutral, bad, total, positiveFeedback }) {\n  const renderFeedback = () => {\n    return (\n      <>\n        <p className={s.paragraph}>Good: {good}</p>\n        <p className={s.paragraph}>Neutral: {neutral}</p>\n        <p className={s.paragraph}>Bad: {bad}</p>\n        <p className={s.paragraph}>Total: {total}</p>\n        <p className={s.paragraph}>Positive feedback: {positiveFeedback}%</p>\n      </>\n    );\n  };\n  return (\n    <div className={s.container}>\n      <div className={s.values}>\n        {total === 0 ? (\n          <Notification message=\"No feedback given\" />\n        ) : (\n          renderFeedback()\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Statistics;\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number,\n  positiveFeedback: PropTypes.number,\n};\n","import s from \"components/FeedbackOptions/FeedbackOptions.module.css\";\nimport PropTypes from \"prop-types\";\n\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <div className={s.wrapper}>\n      {options.map((option) => (\n        <button\n          key={option}\n          type=\"button\"\n          name={option}\n          className={s.button}\n          onClick={(e) => {\n            const item = e.target.name.toLowerCase();\n            onLeaveFeedback(item);\n          }}\n        >\n          {option}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default FeedbackOptions;\n\nFeedbackOptions.propTypes = {\n  key: PropTypes.string,\n  name: PropTypes.string,\n};\n","import s from \"components/Section/Section.module.css\";\nimport PropTypes from \"prop-types\";\n\nfunction Section({ title, children }) {\n  return (\n    <section>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nexport default Section;\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import { useState } from \"react\";\nimport Statistics from \"components/Statistics/Statistics\";\nimport FeedbackOptions from \"components/FeedbackOptions/FeedbackOptions\";\nimport Section from \"components/Section/Section\";\n\nexport default function Feedback({ options }) {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const onButtonClick = (item) => {\n    switch (item) {\n      case \"good\":\n        setGood((prevState) => prevState + 1);\n        break;\n      case \"neutral\":\n        setNeutral((prevState) => prevState + 1);\n        break;\n      case \"bad\":\n        setBad((prevState) => prevState + 1);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const countTotalFeedback = () => {\n    const total = good + neutral + bad;\n    return total;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    const positive = Math.floor(\n      ((good + neutral) / (good + neutral + bad)) * 100\n    );\n    return positive;\n  };\n\n  return (\n    <>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions options={options} onLeaveFeedback={onButtonClick} />\n      </Section>\n      <Section title=\"Statistics\">\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={countTotalFeedback()}\n          positiveFeedback={countPositiveFeedbackPercentage()}\n        />\n      </Section>\n    </>\n  );\n}\n","import \"./App.css\";\nimport Feedback from \"components/FeedbackLogic/FeedbackLogic\";\nconst options = [\"Good\", \"Neutral\", \"Bad\"];\n\nfunction App() {\n  return <Feedback options={options} />;\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}